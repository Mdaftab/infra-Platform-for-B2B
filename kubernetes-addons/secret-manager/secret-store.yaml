---
# GCP Secret Manager secret store
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: gcp-secret-store
spec:
  provider:
    gcpsm:
      projectID: ${GCP_PROJECT_ID}
      auth:
        workloadIdentity:
          # This service account must have access to GCP Secret Manager
          serviceAccountRef:
            name: secret-manager-sa
            namespace: external-secrets
---
# Example SecretStore for Kubernetes secrets
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: kubernetes-secrets
  namespace: default
spec:
  provider:
    kubernetes:
      server:
        # points to the current cluster using in-cluster configuration
        caProvider:
          type: ConfigMap
          name: kube-root-ca.crt
          key: ca.crt
---
# Example of how to use external secrets
# This will be used as a reference in the sample application
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: example-external-secret
  namespace: default
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: kubernetes-secrets
    kind: SecretStore
  target:
    name: application-secret
    creationPolicy: Owner
  data:
  - secretKey: api-key
    remoteRef:
      key: app-api-key
---
# Service Account for GCP Secret Manager access
apiVersion: v1
kind: ServiceAccount
metadata:
  name: secret-manager-sa
  namespace: external-secrets
  annotations:
    iam.gke.io/gcp-service-account: ${GCP_EXTERNAL_SECRETS_SA}